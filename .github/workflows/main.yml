name: Main

on:
  pull_request:
  push:
    branches:
      - master

jobs:

  static_analysis:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Compute key for CI cache
        run: ./scripts/compute-ci-cache-key.sh key.txt

      - name: Setup cache
        uses: actions/cache@v2.1.4
        continue-on-error: true
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('key.txt') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Check code formatting
        run: ./gradlew ktlintCheck --stacktrace

      - name: Check code smells
        run: ./gradlew detekt --stacktrace

  unit_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Compute key for CI cache
        run: ./scripts/compute-ci-cache-key.sh key.txt

      - name: Setup cache
        uses: actions/cache@v2.1.4
        continue-on-error: true
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('key.txt') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Run unit tests and capture code coverage
        run: ./gradlew clean jacocoTestReport jacocoTestReportDebug --stacktrace

      - name: Collect all test results from all modules
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2.2.2
        with:
          name: junit-results-unit-tests
          path: junit

      - name: Share test reports with Codecov
        uses: codecov/codecov-action@v1.3.1

  assemble_apk:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Compute key for CI cache
        run: ./scripts/compute-ci-cache-key.sh key.txt

      - name: Setup cache
        uses: actions/cache@v2.1.4
        continue-on-error: true
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('key.txt') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Assemble APK
        run: ./gradlew clean app:assembleRelease -PtestMode=true --stacktrace

      - name: Archive APK
        uses: actions/upload-artifact@v2.2.2
        with:
          name: release-apk
          path: app/build/outputs/apk/release


  espresso_prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Compute key for CI cache
        run: ./scripts/compute-ci-cache-key.sh key.txt

      - name: Setup cache
        uses: actions/cache@v2.1.4
        continue-on-error: true
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('key.txt') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Setup JDK 1.8
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Assemble Espresso Tests
        run: ./gradlew clean app:assembleAndroidTest --stacktrace

      - name: Archive Test APK
        uses: actions/upload-artifact@v2.2.2
        with:
          name: tests-apk
          path: app/build/outputs/apk/androidTest/release


  acceptance_tests:
    strategy:
      fail-fast: true
      matrix:
        android_sdk: [25, 26, 27, 28, 29]

    runs-on: macOS-10.15
    timeout-minutes: 15
    needs: [assemble_apk, espresso_prepare, unit_tests, static_analysis]
    steps:

      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Fetch Instrumentation artefacts
        uses: actions/download-artifact@v2.0.8

      - name: Run Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2.15.0
        with:
          api-level: ${{ matrix.android_sdk }}
          script: ./scripts/espresso-run.sh
