name: Main

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  static_analysis:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    env:
      JAVA_TOOL_OPTIONS: -Xmx5g -XX:+UseParallelGC

    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Setup Cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: ${{ runner.os }}-${{ github.job }}-

      - name: Extract credentials
        run: ./scripts/secrets.sh decrypt ${{ secrets.NORRIS_CRYPTO_KEY }}

      - name: Check code formatting
        run: ./gradlew ktlintCheck detekt --stacktrace

  unit_tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    env:
      JAVA_TOOL_OPTIONS: -Xmx5g -XX:+UseParallelGC

    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Setup Cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: ${{ runner.os }}-${{ github.job }}-

      - name: Extract credentials
        run: ./scripts/secrets.sh decrypt ${{ secrets.NORRIS_CRYPTO_KEY }}

      - name: Run unit tests
        run: ./gradlew test --stacktrace

      - name: Collect all test results from all modules
        if: always()
        run: ./scripts/aggregate-test-reports.sh build/test-reports

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: junit-results-unit-tests
          path: build/test-reports

      - name: Archive Pacts
        if: always()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: pacts
          path: platform/rest-chucknorris/build/pacts


  assemble_apk:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    env:
      JAVA_TOOL_OPTIONS: -Xmx5g -XX:+UseParallelGC

    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Setup Cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: ${{ runner.os }}-${{ github.job }}-

      - name: Extract credentials
        run: ./scripts/secrets.sh decrypt ${{ secrets.NORRIS_CRYPTO_KEY }}

      - name: Assemble production APK
        run: ./gradlew app:assembleRelease -PtestMode=true --stacktrace

      - name: Archive APK
        uses: actions/upload-artifact@v2.2.4
        with:
          name: release-apk
          path: app/build/outputs/apk/release

  espresso_prepare:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    env:
      JAVA_TOOL_OPTIONS: -Xmx5g -XX:+UseParallelGC

    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Setup Cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: ${{ runner.os }}-${{ github.job }}-

      - name: Extract credentials
        run: ./scripts/secrets.sh decrypt ${{ secrets.NORRIS_CRYPTO_KEY }}

      - name: Assemble Instrumentation tests
        run: ./gradlew app:assembleAndroidTest -PtestMode=true --stacktrace

      - name: Archive Test APK
        uses: actions/upload-artifact@v2.2.4
        with:
          name: tests-apk
          path: app/build/outputs/apk/androidTest/release

  screenshot_tests:
    runs-on: macOS-10.15
    needs: [assemble_apk, espresso_prepare, unit_tests, static_analysis]
    timeout-minutes: 20
    env:
      JAVA_TOOL_OPTIONS: -Xmx5g -XX:+UseParallelGC

    steps:
      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Optimize for Gradle build
        run: |
          mkdir -p ~/.gradle
          cp .github/githubci-gradle.properties ~/.gradle/gradle.properties

      - name: Setup Cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: ${{ runner.os }}-${{ github.job }}-

      - name: Extract credentials
        run: ./scripts/secrets.sh decrypt ${{ secrets.NORRIS_CRYPTO_KEY }}

      - name: Run Screenshot tests
        uses: reactivecircus/android-emulator-runner@v2.19.1
        with:
          api-level: 28
          target: 'google_apis'
          profile: 'pixel'
          script: ./gradlew clean executeScreenTests --no-daemon --stacktrace

  acceptance_tests:
    strategy:
      fail-fast: true
      matrix:
        android_sdk: [26, 27]

    runs-on: macOS-10.15
    timeout-minutes: 15
    needs: [assemble_apk, espresso_prepare, unit_tests, static_analysis]
    steps:

      - name: Project Checkout
        uses: actions/checkout@v2.3.4

      - name: Fetch Instrumentation artefacts
        uses: actions/download-artifact@v2.0.10

      - name: Run Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2.19.1
        with:
          api-level: ${{ matrix.android_sdk }}
          script: ./scripts/espresso-run.sh
